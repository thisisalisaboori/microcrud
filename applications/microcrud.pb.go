// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: microcrud.proto

package main

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type EntityProtocol struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *structpb.Struct       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityProtocol) Reset() {
	*x = EntityProtocol{}
	mi := &file_microcrud_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityProtocol) ProtoMessage() {}

func (x *EntityProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_microcrud_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityProtocol.ProtoReflect.Descriptor instead.
func (*EntityProtocol) Descriptor() ([]byte, []int) {
	return file_microcrud_proto_rawDescGZIP(), []int{0}
}

func (x *EntityProtocol) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteProtocol struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProtocol) Reset() {
	*x = DeleteProtocol{}
	mi := &file_microcrud_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProtocol) ProtoMessage() {}

func (x *DeleteProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_microcrud_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProtocol.ProtoReflect.Descriptor instead.
func (*DeleteProtocol) Descriptor() ([]byte, []int) {
	return file_microcrud_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteProtocol) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProtocol struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProtocol) Reset() {
	*x = GetProtocol{}
	mi := &file_microcrud_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProtocol) ProtoMessage() {}

func (x *GetProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_microcrud_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProtocol.ProtoReflect.Descriptor instead.
func (*GetProtocol) Descriptor() ([]byte, []int) {
	return file_microcrud_proto_rawDescGZIP(), []int{2}
}

func (x *GetProtocol) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response message containing the greetings.
type ResultService struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Data          *structpb.Struct       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultService) Reset() {
	*x = ResultService{}
	mi := &file_microcrud_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultService) ProtoMessage() {}

func (x *ResultService) ProtoReflect() protoreflect.Message {
	mi := &file_microcrud_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultService.ProtoReflect.Descriptor instead.
func (*ResultService) Descriptor() ([]byte, []int) {
	return file_microcrud_proto_rawDescGZIP(), []int{3}
}

func (x *ResultService) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResultService) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_microcrud_proto protoreflect.FileDescriptor

const file_microcrud_proto_rawDesc = "" +
	"\n" +
	"\x0fmicrocrud.proto\x12\tmicrocrud\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1bgoogle/protobuf/empty.proto\"=\n" +
	"\x0eEntityProtocol\x12+\n" +
	"\x04data\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04data\" \n" +
	"\x0eDeleteProtocol\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1d\n" +
	"\vGetProtocol\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"V\n" +
	"\rResultService\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12+\n" +
	"\x04data\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04data2\xcd\x02\n" +
	"\n" +
	"CrudEntity\x12?\n" +
	"\x06Create\x12\x19.microcrud.EntityProtocol\x1a\x18.microcrud.ResultService\"\x00\x12?\n" +
	"\x06Update\x12\x19.microcrud.EntityProtocol\x1a\x18.microcrud.ResultService\"\x00\x12?\n" +
	"\x06Delete\x12\x19.microcrud.DeleteProtocol\x1a\x18.microcrud.ResultService\"\x00\x12=\n" +
	"\aGetById\x12\x16.microcrud.GetProtocol\x1a\x18.microcrud.ResultService\"\x00\x12=\n" +
	"\aGetData\x12\x16.google.protobuf.Empty\x1a\x18.microcrud.ResultService\"\x00B\x14Z\x12microcud.contractsb\x06proto3"

var (
	file_microcrud_proto_rawDescOnce sync.Once
	file_microcrud_proto_rawDescData []byte
)

func file_microcrud_proto_rawDescGZIP() []byte {
	file_microcrud_proto_rawDescOnce.Do(func() {
		file_microcrud_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_microcrud_proto_rawDesc), len(file_microcrud_proto_rawDesc)))
	})
	return file_microcrud_proto_rawDescData
}

var file_microcrud_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_microcrud_proto_goTypes = []any{
	(*EntityProtocol)(nil),  // 0: microcrud.EntityProtocol
	(*DeleteProtocol)(nil),  // 1: microcrud.DeleteProtocol
	(*GetProtocol)(nil),     // 2: microcrud.GetProtocol
	(*ResultService)(nil),   // 3: microcrud.ResultService
	(*structpb.Struct)(nil), // 4: google.protobuf.Struct
	(*emptypb.Empty)(nil),   // 5: google.protobuf.Empty
}
var file_microcrud_proto_depIdxs = []int32{
	4, // 0: microcrud.EntityProtocol.data:type_name -> google.protobuf.Struct
	4, // 1: microcrud.ResultService.data:type_name -> google.protobuf.Struct
	0, // 2: microcrud.CrudEntity.Create:input_type -> microcrud.EntityProtocol
	0, // 3: microcrud.CrudEntity.Update:input_type -> microcrud.EntityProtocol
	1, // 4: microcrud.CrudEntity.Delete:input_type -> microcrud.DeleteProtocol
	2, // 5: microcrud.CrudEntity.GetById:input_type -> microcrud.GetProtocol
	5, // 6: microcrud.CrudEntity.GetData:input_type -> google.protobuf.Empty
	3, // 7: microcrud.CrudEntity.Create:output_type -> microcrud.ResultService
	3, // 8: microcrud.CrudEntity.Update:output_type -> microcrud.ResultService
	3, // 9: microcrud.CrudEntity.Delete:output_type -> microcrud.ResultService
	3, // 10: microcrud.CrudEntity.GetById:output_type -> microcrud.ResultService
	3, // 11: microcrud.CrudEntity.GetData:output_type -> microcrud.ResultService
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_microcrud_proto_init() }
func file_microcrud_proto_init() {
	if File_microcrud_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_microcrud_proto_rawDesc), len(file_microcrud_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_microcrud_proto_goTypes,
		DependencyIndexes: file_microcrud_proto_depIdxs,
		MessageInfos:      file_microcrud_proto_msgTypes,
	}.Build()
	File_microcrud_proto = out.File
	file_microcrud_proto_goTypes = nil
	file_microcrud_proto_depIdxs = nil
}
